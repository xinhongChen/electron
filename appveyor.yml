version: 1.0.{build}
build_cloud: libcc-20
image: libcc-20-vs2017-15.7.4
environment:
  GIT_CACHE_PATH: C:\Users\electron\libcc_cache
  DISABLE_CRASH_REPORTER_TESTS: true
build_script:
  - ps: >-
      if(($env:APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME -split "/")[0] -eq ($env:APPVEYOR_REPO_NAME -split "/")[0]) {
        Write-warning "Skipping PR build for branch"; Exit-AppveyorBuild
      }
  - echo "Building $env:GN_CONFIG build"
  - git config --global core.longpaths true
  - cd ..
  - md src
  - ps: Move-Item $env:APPVEYOR_BUILD_FOLDER -Destination src\electron
  - ps: $env:CHROMIUM_BUILDTOOLS_PATH="$pwd\src\buildtools"
  - ps: $env:SCCACHE_PATH="$pwd\src\electron\external_binaries\sccache.exe"
  - >-
      gclient config
      --name "src\electron"
      --unmanaged
      "https://github.com/electron/electron"
  - gclient sync --with_branch_heads --with_tags
  - cd src
  - gn gen out/Default "--args=import(\"//electron/build/args/%GN_CONFIG%.gn\") %GN_EXTRA_ARGS%"
  - ninja -C out/Default electron:electron_app
  - gn gen out/ffmpeg "--args=import(\"//electron/build/args/ffmpeg.gn\") %GN_EXTRA_ARGS%"
  - ninja -C out/ffmpeg third_party/ffmpeg
  - ninja -C out/Default electron:electron_dist_zip
  - appveyor PushArtifact out/Default/dist.zip
test_script:
  - if "%GN_CONFIG%"=="testing" ( echo Verifying non proprietary ffmpeg & python electron\script\verify-ffmpeg.py --build-dir out\Default --source-root %cd% --ffmpeg-path out\ffmpeg )
  - ps: >-
      if ($env:GN_CONFIG -eq 'testing') {
        ninja -C out/Default third_party/electron_node:headers
        New-Item .\out\Default\gen\node_headers\Release -Type directory
        Copy-Item -path .\out\Default\electron.lib -destination .\out\Default\gen\node_headers\Release\node.lib
      } else {
        echo "Skipping tests for $env:GN_CONFIG build"
      }
  - cd electron
  - if "%GN_CONFIG%"=="testing" ( echo Running test suite & npm run test -- --ci )
